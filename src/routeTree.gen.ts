/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NewLobbyRouteImport } from './routes/new-lobby'
import { Route as MyPlayerProfilesRouteImport } from './routes/my-player-profiles'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JoinLobbyLobbyIdRouteImport } from './routes/join-lobby.$lobbyId'
import { Route as HostedLobbyLobbyIdRouteImport } from './routes/hosted-lobby.$lobbyId'
import { Route as HostedGamesTableIdRouteImport } from './routes/hosted-games.$tableId'
import { Route as GamesTableIdRouteImport } from './routes/games.$tableId'

const NewLobbyRoute = NewLobbyRouteImport.update({
  id: '/new-lobby',
  path: '/new-lobby',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPlayerProfilesRoute = MyPlayerProfilesRouteImport.update({
  id: '/my-player-profiles',
  path: '/my-player-profiles',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinLobbyLobbyIdRoute = JoinLobbyLobbyIdRouteImport.update({
  id: '/join-lobby/$lobbyId',
  path: '/join-lobby/$lobbyId',
  getParentRoute: () => rootRouteImport,
} as any)
const HostedLobbyLobbyIdRoute = HostedLobbyLobbyIdRouteImport.update({
  id: '/hosted-lobby/$lobbyId',
  path: '/hosted-lobby/$lobbyId',
  getParentRoute: () => rootRouteImport,
} as any)
const HostedGamesTableIdRoute = HostedGamesTableIdRouteImport.update({
  id: '/hosted-games/$tableId',
  path: '/hosted-games/$tableId',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesTableIdRoute = GamesTableIdRouteImport.update({
  id: '/games/$tableId',
  path: '/games/$tableId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/my-player-profiles': typeof MyPlayerProfilesRoute
  '/new-lobby': typeof NewLobbyRoute
  '/games/$tableId': typeof GamesTableIdRoute
  '/hosted-games/$tableId': typeof HostedGamesTableIdRoute
  '/hosted-lobby/$lobbyId': typeof HostedLobbyLobbyIdRoute
  '/join-lobby/$lobbyId': typeof JoinLobbyLobbyIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/my-player-profiles': typeof MyPlayerProfilesRoute
  '/new-lobby': typeof NewLobbyRoute
  '/games/$tableId': typeof GamesTableIdRoute
  '/hosted-games/$tableId': typeof HostedGamesTableIdRoute
  '/hosted-lobby/$lobbyId': typeof HostedLobbyLobbyIdRoute
  '/join-lobby/$lobbyId': typeof JoinLobbyLobbyIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/my-player-profiles': typeof MyPlayerProfilesRoute
  '/new-lobby': typeof NewLobbyRoute
  '/games/$tableId': typeof GamesTableIdRoute
  '/hosted-games/$tableId': typeof HostedGamesTableIdRoute
  '/hosted-lobby/$lobbyId': typeof HostedLobbyLobbyIdRoute
  '/join-lobby/$lobbyId': typeof JoinLobbyLobbyIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/my-player-profiles'
    | '/new-lobby'
    | '/games/$tableId'
    | '/hosted-games/$tableId'
    | '/hosted-lobby/$lobbyId'
    | '/join-lobby/$lobbyId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/my-player-profiles'
    | '/new-lobby'
    | '/games/$tableId'
    | '/hosted-games/$tableId'
    | '/hosted-lobby/$lobbyId'
    | '/join-lobby/$lobbyId'
  id:
    | '__root__'
    | '/'
    | '/my-player-profiles'
    | '/new-lobby'
    | '/games/$tableId'
    | '/hosted-games/$tableId'
    | '/hosted-lobby/$lobbyId'
    | '/join-lobby/$lobbyId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MyPlayerProfilesRoute: typeof MyPlayerProfilesRoute
  NewLobbyRoute: typeof NewLobbyRoute
  GamesTableIdRoute: typeof GamesTableIdRoute
  HostedGamesTableIdRoute: typeof HostedGamesTableIdRoute
  HostedLobbyLobbyIdRoute: typeof HostedLobbyLobbyIdRoute
  JoinLobbyLobbyIdRoute: typeof JoinLobbyLobbyIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/new-lobby': {
      id: '/new-lobby'
      path: '/new-lobby'
      fullPath: '/new-lobby'
      preLoaderRoute: typeof NewLobbyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-player-profiles': {
      id: '/my-player-profiles'
      path: '/my-player-profiles'
      fullPath: '/my-player-profiles'
      preLoaderRoute: typeof MyPlayerProfilesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join-lobby/$lobbyId': {
      id: '/join-lobby/$lobbyId'
      path: '/join-lobby/$lobbyId'
      fullPath: '/join-lobby/$lobbyId'
      preLoaderRoute: typeof JoinLobbyLobbyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hosted-lobby/$lobbyId': {
      id: '/hosted-lobby/$lobbyId'
      path: '/hosted-lobby/$lobbyId'
      fullPath: '/hosted-lobby/$lobbyId'
      preLoaderRoute: typeof HostedLobbyLobbyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hosted-games/$tableId': {
      id: '/hosted-games/$tableId'
      path: '/hosted-games/$tableId'
      fullPath: '/hosted-games/$tableId'
      preLoaderRoute: typeof HostedGamesTableIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$tableId': {
      id: '/games/$tableId'
      path: '/games/$tableId'
      fullPath: '/games/$tableId'
      preLoaderRoute: typeof GamesTableIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MyPlayerProfilesRoute: MyPlayerProfilesRoute,
  NewLobbyRoute: NewLobbyRoute,
  GamesTableIdRoute: GamesTableIdRoute,
  HostedGamesTableIdRoute: HostedGamesTableIdRoute,
  HostedLobbyLobbyIdRoute: HostedLobbyLobbyIdRoute,
  JoinLobbyLobbyIdRoute: JoinLobbyLobbyIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
