/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NewLobbyRouteImport } from './routes/new-lobby'
import { Route as MyPlayerProfilesRouteImport } from './routes/my-player-profiles'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JoinLobbyLobbyIdRouteImport } from './routes/join-lobby.$lobbyId'
import { Route as HostedLobbyLobbyIdRouteImport } from './routes/hosted-lobby.$lobbyId'
import { Route as JoinLobbyLobbyIdIndexRouteImport } from './routes/join-lobby.$lobbyId/index'
import { Route as HostedLobbyLobbyIdIndexRouteImport } from './routes/hosted-lobby.$lobbyId/index'
import { Route as JoinLobbyLobbyIdP2pDetailsRouteImport } from './routes/join-lobby.$lobbyId/p2p-details'
import { Route as HostedLobbyLobbyIdPlayerRouteImport } from './routes/hosted-lobby.$lobbyId/player'
import { Route as HostedLobbyLobbyIdP2pDetailsRouteImport } from './routes/hosted-lobby.$lobbyId/p2p-details'
import { Route as GamesRoleTableIdRouteImport } from './routes/games.$role.$tableId'
import { Route as GamesRoleTableIdIndexRouteImport } from './routes/games.$role.$tableId/index'
import { Route as GamesRoleTableIdP2pDetailsRouteImport } from './routes/games.$role.$tableId/p2p-details'
import { Route as GamesRoleTableIdGameDetailsRouteImport } from './routes/games.$role.$tableId/game-details'
import { Route as GamesRoleTableIdAdminRouteImport } from './routes/games.$role.$tableId/admin'

const NewLobbyRoute = NewLobbyRouteImport.update({
  id: '/new-lobby',
  path: '/new-lobby',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPlayerProfilesRoute = MyPlayerProfilesRouteImport.update({
  id: '/my-player-profiles',
  path: '/my-player-profiles',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinLobbyLobbyIdRoute = JoinLobbyLobbyIdRouteImport.update({
  id: '/join-lobby/$lobbyId',
  path: '/join-lobby/$lobbyId',
  getParentRoute: () => rootRouteImport,
} as any)
const HostedLobbyLobbyIdRoute = HostedLobbyLobbyIdRouteImport.update({
  id: '/hosted-lobby/$lobbyId',
  path: '/hosted-lobby/$lobbyId',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinLobbyLobbyIdIndexRoute = JoinLobbyLobbyIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => JoinLobbyLobbyIdRoute,
} as any)
const HostedLobbyLobbyIdIndexRoute = HostedLobbyLobbyIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HostedLobbyLobbyIdRoute,
} as any)
const JoinLobbyLobbyIdP2pDetailsRoute =
  JoinLobbyLobbyIdP2pDetailsRouteImport.update({
    id: '/p2p-details',
    path: '/p2p-details',
    getParentRoute: () => JoinLobbyLobbyIdRoute,
  } as any)
const HostedLobbyLobbyIdPlayerRoute =
  HostedLobbyLobbyIdPlayerRouteImport.update({
    id: '/player',
    path: '/player',
    getParentRoute: () => HostedLobbyLobbyIdRoute,
  } as any)
const HostedLobbyLobbyIdP2pDetailsRoute =
  HostedLobbyLobbyIdP2pDetailsRouteImport.update({
    id: '/p2p-details',
    path: '/p2p-details',
    getParentRoute: () => HostedLobbyLobbyIdRoute,
  } as any)
const GamesRoleTableIdRoute = GamesRoleTableIdRouteImport.update({
  id: '/games/$role/$tableId',
  path: '/games/$role/$tableId',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesRoleTableIdIndexRoute = GamesRoleTableIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GamesRoleTableIdRoute,
} as any)
const GamesRoleTableIdP2pDetailsRoute =
  GamesRoleTableIdP2pDetailsRouteImport.update({
    id: '/p2p-details',
    path: '/p2p-details',
    getParentRoute: () => GamesRoleTableIdRoute,
  } as any)
const GamesRoleTableIdGameDetailsRoute =
  GamesRoleTableIdGameDetailsRouteImport.update({
    id: '/game-details',
    path: '/game-details',
    getParentRoute: () => GamesRoleTableIdRoute,
  } as any)
const GamesRoleTableIdAdminRoute = GamesRoleTableIdAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => GamesRoleTableIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/my-player-profiles': typeof MyPlayerProfilesRoute
  '/new-lobby': typeof NewLobbyRoute
  '/hosted-lobby/$lobbyId': typeof HostedLobbyLobbyIdRouteWithChildren
  '/join-lobby/$lobbyId': typeof JoinLobbyLobbyIdRouteWithChildren
  '/games/$role/$tableId': typeof GamesRoleTableIdRouteWithChildren
  '/hosted-lobby/$lobbyId/p2p-details': typeof HostedLobbyLobbyIdP2pDetailsRoute
  '/hosted-lobby/$lobbyId/player': typeof HostedLobbyLobbyIdPlayerRoute
  '/join-lobby/$lobbyId/p2p-details': typeof JoinLobbyLobbyIdP2pDetailsRoute
  '/hosted-lobby/$lobbyId/': typeof HostedLobbyLobbyIdIndexRoute
  '/join-lobby/$lobbyId/': typeof JoinLobbyLobbyIdIndexRoute
  '/games/$role/$tableId/admin': typeof GamesRoleTableIdAdminRoute
  '/games/$role/$tableId/game-details': typeof GamesRoleTableIdGameDetailsRoute
  '/games/$role/$tableId/p2p-details': typeof GamesRoleTableIdP2pDetailsRoute
  '/games/$role/$tableId/': typeof GamesRoleTableIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/my-player-profiles': typeof MyPlayerProfilesRoute
  '/new-lobby': typeof NewLobbyRoute
  '/hosted-lobby/$lobbyId/p2p-details': typeof HostedLobbyLobbyIdP2pDetailsRoute
  '/hosted-lobby/$lobbyId/player': typeof HostedLobbyLobbyIdPlayerRoute
  '/join-lobby/$lobbyId/p2p-details': typeof JoinLobbyLobbyIdP2pDetailsRoute
  '/hosted-lobby/$lobbyId': typeof HostedLobbyLobbyIdIndexRoute
  '/join-lobby/$lobbyId': typeof JoinLobbyLobbyIdIndexRoute
  '/games/$role/$tableId/admin': typeof GamesRoleTableIdAdminRoute
  '/games/$role/$tableId/game-details': typeof GamesRoleTableIdGameDetailsRoute
  '/games/$role/$tableId/p2p-details': typeof GamesRoleTableIdP2pDetailsRoute
  '/games/$role/$tableId': typeof GamesRoleTableIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/my-player-profiles': typeof MyPlayerProfilesRoute
  '/new-lobby': typeof NewLobbyRoute
  '/hosted-lobby/$lobbyId': typeof HostedLobbyLobbyIdRouteWithChildren
  '/join-lobby/$lobbyId': typeof JoinLobbyLobbyIdRouteWithChildren
  '/games/$role/$tableId': typeof GamesRoleTableIdRouteWithChildren
  '/hosted-lobby/$lobbyId/p2p-details': typeof HostedLobbyLobbyIdP2pDetailsRoute
  '/hosted-lobby/$lobbyId/player': typeof HostedLobbyLobbyIdPlayerRoute
  '/join-lobby/$lobbyId/p2p-details': typeof JoinLobbyLobbyIdP2pDetailsRoute
  '/hosted-lobby/$lobbyId/': typeof HostedLobbyLobbyIdIndexRoute
  '/join-lobby/$lobbyId/': typeof JoinLobbyLobbyIdIndexRoute
  '/games/$role/$tableId/admin': typeof GamesRoleTableIdAdminRoute
  '/games/$role/$tableId/game-details': typeof GamesRoleTableIdGameDetailsRoute
  '/games/$role/$tableId/p2p-details': typeof GamesRoleTableIdP2pDetailsRoute
  '/games/$role/$tableId/': typeof GamesRoleTableIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/my-player-profiles'
    | '/new-lobby'
    | '/hosted-lobby/$lobbyId'
    | '/join-lobby/$lobbyId'
    | '/games/$role/$tableId'
    | '/hosted-lobby/$lobbyId/p2p-details'
    | '/hosted-lobby/$lobbyId/player'
    | '/join-lobby/$lobbyId/p2p-details'
    | '/hosted-lobby/$lobbyId/'
    | '/join-lobby/$lobbyId/'
    | '/games/$role/$tableId/admin'
    | '/games/$role/$tableId/game-details'
    | '/games/$role/$tableId/p2p-details'
    | '/games/$role/$tableId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/my-player-profiles'
    | '/new-lobby'
    | '/hosted-lobby/$lobbyId/p2p-details'
    | '/hosted-lobby/$lobbyId/player'
    | '/join-lobby/$lobbyId/p2p-details'
    | '/hosted-lobby/$lobbyId'
    | '/join-lobby/$lobbyId'
    | '/games/$role/$tableId/admin'
    | '/games/$role/$tableId/game-details'
    | '/games/$role/$tableId/p2p-details'
    | '/games/$role/$tableId'
  id:
    | '__root__'
    | '/'
    | '/my-player-profiles'
    | '/new-lobby'
    | '/hosted-lobby/$lobbyId'
    | '/join-lobby/$lobbyId'
    | '/games/$role/$tableId'
    | '/hosted-lobby/$lobbyId/p2p-details'
    | '/hosted-lobby/$lobbyId/player'
    | '/join-lobby/$lobbyId/p2p-details'
    | '/hosted-lobby/$lobbyId/'
    | '/join-lobby/$lobbyId/'
    | '/games/$role/$tableId/admin'
    | '/games/$role/$tableId/game-details'
    | '/games/$role/$tableId/p2p-details'
    | '/games/$role/$tableId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MyPlayerProfilesRoute: typeof MyPlayerProfilesRoute
  NewLobbyRoute: typeof NewLobbyRoute
  HostedLobbyLobbyIdRoute: typeof HostedLobbyLobbyIdRouteWithChildren
  JoinLobbyLobbyIdRoute: typeof JoinLobbyLobbyIdRouteWithChildren
  GamesRoleTableIdRoute: typeof GamesRoleTableIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/new-lobby': {
      id: '/new-lobby'
      path: '/new-lobby'
      fullPath: '/new-lobby'
      preLoaderRoute: typeof NewLobbyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-player-profiles': {
      id: '/my-player-profiles'
      path: '/my-player-profiles'
      fullPath: '/my-player-profiles'
      preLoaderRoute: typeof MyPlayerProfilesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join-lobby/$lobbyId': {
      id: '/join-lobby/$lobbyId'
      path: '/join-lobby/$lobbyId'
      fullPath: '/join-lobby/$lobbyId'
      preLoaderRoute: typeof JoinLobbyLobbyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hosted-lobby/$lobbyId': {
      id: '/hosted-lobby/$lobbyId'
      path: '/hosted-lobby/$lobbyId'
      fullPath: '/hosted-lobby/$lobbyId'
      preLoaderRoute: typeof HostedLobbyLobbyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join-lobby/$lobbyId/': {
      id: '/join-lobby/$lobbyId/'
      path: '/'
      fullPath: '/join-lobby/$lobbyId/'
      preLoaderRoute: typeof JoinLobbyLobbyIdIndexRouteImport
      parentRoute: typeof JoinLobbyLobbyIdRoute
    }
    '/hosted-lobby/$lobbyId/': {
      id: '/hosted-lobby/$lobbyId/'
      path: '/'
      fullPath: '/hosted-lobby/$lobbyId/'
      preLoaderRoute: typeof HostedLobbyLobbyIdIndexRouteImport
      parentRoute: typeof HostedLobbyLobbyIdRoute
    }
    '/join-lobby/$lobbyId/p2p-details': {
      id: '/join-lobby/$lobbyId/p2p-details'
      path: '/p2p-details'
      fullPath: '/join-lobby/$lobbyId/p2p-details'
      preLoaderRoute: typeof JoinLobbyLobbyIdP2pDetailsRouteImport
      parentRoute: typeof JoinLobbyLobbyIdRoute
    }
    '/hosted-lobby/$lobbyId/player': {
      id: '/hosted-lobby/$lobbyId/player'
      path: '/player'
      fullPath: '/hosted-lobby/$lobbyId/player'
      preLoaderRoute: typeof HostedLobbyLobbyIdPlayerRouteImport
      parentRoute: typeof HostedLobbyLobbyIdRoute
    }
    '/hosted-lobby/$lobbyId/p2p-details': {
      id: '/hosted-lobby/$lobbyId/p2p-details'
      path: '/p2p-details'
      fullPath: '/hosted-lobby/$lobbyId/p2p-details'
      preLoaderRoute: typeof HostedLobbyLobbyIdP2pDetailsRouteImport
      parentRoute: typeof HostedLobbyLobbyIdRoute
    }
    '/games/$role/$tableId': {
      id: '/games/$role/$tableId'
      path: '/games/$role/$tableId'
      fullPath: '/games/$role/$tableId'
      preLoaderRoute: typeof GamesRoleTableIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$role/$tableId/': {
      id: '/games/$role/$tableId/'
      path: '/'
      fullPath: '/games/$role/$tableId/'
      preLoaderRoute: typeof GamesRoleTableIdIndexRouteImport
      parentRoute: typeof GamesRoleTableIdRoute
    }
    '/games/$role/$tableId/p2p-details': {
      id: '/games/$role/$tableId/p2p-details'
      path: '/p2p-details'
      fullPath: '/games/$role/$tableId/p2p-details'
      preLoaderRoute: typeof GamesRoleTableIdP2pDetailsRouteImport
      parentRoute: typeof GamesRoleTableIdRoute
    }
    '/games/$role/$tableId/game-details': {
      id: '/games/$role/$tableId/game-details'
      path: '/game-details'
      fullPath: '/games/$role/$tableId/game-details'
      preLoaderRoute: typeof GamesRoleTableIdGameDetailsRouteImport
      parentRoute: typeof GamesRoleTableIdRoute
    }
    '/games/$role/$tableId/admin': {
      id: '/games/$role/$tableId/admin'
      path: '/admin'
      fullPath: '/games/$role/$tableId/admin'
      preLoaderRoute: typeof GamesRoleTableIdAdminRouteImport
      parentRoute: typeof GamesRoleTableIdRoute
    }
  }
}

interface HostedLobbyLobbyIdRouteChildren {
  HostedLobbyLobbyIdP2pDetailsRoute: typeof HostedLobbyLobbyIdP2pDetailsRoute
  HostedLobbyLobbyIdPlayerRoute: typeof HostedLobbyLobbyIdPlayerRoute
  HostedLobbyLobbyIdIndexRoute: typeof HostedLobbyLobbyIdIndexRoute
}

const HostedLobbyLobbyIdRouteChildren: HostedLobbyLobbyIdRouteChildren = {
  HostedLobbyLobbyIdP2pDetailsRoute: HostedLobbyLobbyIdP2pDetailsRoute,
  HostedLobbyLobbyIdPlayerRoute: HostedLobbyLobbyIdPlayerRoute,
  HostedLobbyLobbyIdIndexRoute: HostedLobbyLobbyIdIndexRoute,
}

const HostedLobbyLobbyIdRouteWithChildren =
  HostedLobbyLobbyIdRoute._addFileChildren(HostedLobbyLobbyIdRouteChildren)

interface JoinLobbyLobbyIdRouteChildren {
  JoinLobbyLobbyIdP2pDetailsRoute: typeof JoinLobbyLobbyIdP2pDetailsRoute
  JoinLobbyLobbyIdIndexRoute: typeof JoinLobbyLobbyIdIndexRoute
}

const JoinLobbyLobbyIdRouteChildren: JoinLobbyLobbyIdRouteChildren = {
  JoinLobbyLobbyIdP2pDetailsRoute: JoinLobbyLobbyIdP2pDetailsRoute,
  JoinLobbyLobbyIdIndexRoute: JoinLobbyLobbyIdIndexRoute,
}

const JoinLobbyLobbyIdRouteWithChildren =
  JoinLobbyLobbyIdRoute._addFileChildren(JoinLobbyLobbyIdRouteChildren)

interface GamesRoleTableIdRouteChildren {
  GamesRoleTableIdAdminRoute: typeof GamesRoleTableIdAdminRoute
  GamesRoleTableIdGameDetailsRoute: typeof GamesRoleTableIdGameDetailsRoute
  GamesRoleTableIdP2pDetailsRoute: typeof GamesRoleTableIdP2pDetailsRoute
  GamesRoleTableIdIndexRoute: typeof GamesRoleTableIdIndexRoute
}

const GamesRoleTableIdRouteChildren: GamesRoleTableIdRouteChildren = {
  GamesRoleTableIdAdminRoute: GamesRoleTableIdAdminRoute,
  GamesRoleTableIdGameDetailsRoute: GamesRoleTableIdGameDetailsRoute,
  GamesRoleTableIdP2pDetailsRoute: GamesRoleTableIdP2pDetailsRoute,
  GamesRoleTableIdIndexRoute: GamesRoleTableIdIndexRoute,
}

const GamesRoleTableIdRouteWithChildren =
  GamesRoleTableIdRoute._addFileChildren(GamesRoleTableIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MyPlayerProfilesRoute: MyPlayerProfilesRoute,
  NewLobbyRoute: NewLobbyRoute,
  HostedLobbyLobbyIdRoute: HostedLobbyLobbyIdRouteWithChildren,
  JoinLobbyLobbyIdRoute: JoinLobbyLobbyIdRouteWithChildren,
  GamesRoleTableIdRoute: GamesRoleTableIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
